[HEADER]
	VERSION		01.00.00.00
	DESCRIPTION Post Process Example
	COPYRIGHT	Imagination Technologies Ltd.
[/HEADER]

[TEXTURE]
	NAME		SceneResult
	FILTER		LINEAR-LINEAR-NONE
	VIEW		PFX_CURRENTVIEW
[/TEXTURE]

[TARGET]
	NAME		BlurTarget
	FILTER		LINEAR-LINEAR-NONE	
	RESOLUTION	256 256
[/TARGET]




// ------------------------------------------------------------------------------
// ------------------------------------------------------------ BLUR POST PROCESS
// ------------------------------------------------------------------------------
[VERTEXSHADER]
	NAME BlurVertShader
	[GLSL_CODE]
#version 300
in vec3 a_vertex;
in vec2 a_texCoord0;

out vec2 v_texCoord;

void main()
{
	gl_Position = vec4(a_vertex, 1.0);
	v_texCoord = a_texCoord0;
}
	[/GLSL_CODE]
[/VERTEXSHADER]

[FRAGMENTSHADER]
	NAME BlurFragShader
	[GLSL_CODE]
#version 300
precision mediump float;
uniform sampler2D renderTexture;
uniform float u_blurStep;
in vec2 v_texCoord;
layout(location = 0) out vec4 outColor;
void main(void)
{
   vec4 sample0,
        sample1,
        sample2,
        sample3;
        
   float fStep = u_blurStep / 100.0;
        
   sample0 = texture2D ( renderTexture, 
                         vec2 ( v_texCoord.x - fStep, v_texCoord.y - fStep ) );
   sample1 = texture2D ( renderTexture, 
                         vec2 ( v_texCoord.x + fStep, v_texCoord.y + fStep ) );
   sample2 = texture2D ( renderTexture, 
                         vec2 ( v_texCoord.x + fStep, v_texCoord.y - fStep ) );
   sample3 = texture2D ( renderTexture, 
                         vec2 ( v_texCoord.x - fStep, v_texCoord.y + fStep) );
                        
   outColor = (sample0 + sample1 + sample2 + sample3) / 4.0;
}	
	[/GLSL_CODE]
[/FRAGMENTSHADER] 
[EFFECT] 
	NAME SimpleBlurEffect
	
	ATTRIBUTE	a_vertex		POSITION
	ATTRIBUTE 	a_texCoord0 	UV0
	UNIFORM 	renderTexture	TEXTURE0
	UNIFORM		u_blurStep		TIMECOS
	
	TEXTURE 0 		SceneResult
	TARGET 	COLOR0 	BlurTarget
	
	VERTEXSHADER BlurVertShader
	FRAGMENTSHADER BlurFragShader
[/EFFECT]
